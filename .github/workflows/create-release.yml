name: create release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version of the toolchain to build'
        required: true
        default: 'v0.1.0'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: adjust permissions
        uses: ./.github/actions/permission

      - name: switch branch
        run: |
          git pull
          git branch -a
          git switch ${{ github.event.inputs.version }}

      - name: create release
        run: |
          # targets
          TARGETS=(
            "aarch64-unknown-linux-musl"
            "arm-unknown-linux-musleabi"
            "arm-unknown-linux-musleabihf"
            "i686-unknown-linux-musl"
            "loongarch64-unknown-linux-gnu"
            "loongarch64-unknown-linux-musl"
            "powerpc-unknown-linux-gnu"
            "powerpc64-unknown-linux-gnu"
            "riscv64-unknown-linux-musl"
            "riscv64gc-unknown-linux-gnu"
            "x86_64-unknown-linux-musl"
            "x86_64-unknown-netbsd"
          )
          mkdir -p x-tools
          for target in "${TARGETS[@]}"; do
            tar -czf "x-tools/${target}.tar.gz" "${target}"
          done

          echo "x-tools"

          # sysroot
          mkdir -p sysroot
          TARGETS=(
            "i586"
            "riscv64gc"
          )
          for target in "${TARGETS[@]}"; do
            tar -czf "sysroot/${target}-unknown-linux-musl.tar.gz" "musl-sysroot/${target}"
          done

          TARGETS=(
            "armv5te"
            "armv7"
          )
          for target in "${TARGETS[@]}"; do
            tar -czf "sysroot/${target}-unknown-linux-musleabi.tar.gz" "musl-sysroot/${target}"
          done

          TARGETS=(
            "armv7hf"
          )
          for target in "${TARGETS[@]}"; do
            tar -czf "sysroot/${target}-unknown-linux-musleabihf.tar.gz" "musl-sysroot/${target}"
          done

      - name: upload release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            x-tools/*.tar.gz, sysroot/*.tar.gz
          tag: "${{ github.event.inputs.version }}-release"
          allowUpdates: true
          prerelease: true
