name: Build toolchains

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version of the toolchain to build'
        required: true
        default: 'v0.1.0'

permissions:
  packages: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [
          "loongarch64-unknown-linux-gnu",
          "loongarch64-unknown-linux-musl",
          "powerpc-unknown-linux-gnu",
          "powerpc64-unknown-linux-gnu",
          "riscv64gc-unknown-linux-gnu",
          "aarch64-unknown-linux-gnu",
          "i586-unknown-linux-gnu",
          "i686-unknown-linux-gnu",
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: adjust permissions
        uses: ./.github/actions/permission

      - name: Setup crosstool-ng
        uses: ./.github/actions/setup-crosstool-ng
        with:
          is-stable: matrix.target == 'aarch64-unknown-linux-gnu'

      # https://github.com/rust-lang/rust/tree/46e8d20301cb4abe91ab0a4bea43bb085e1d4e4a/src/ci/docker/host-x86_64
      - name: Build toolchains
        if: matrix.target != 'riscv64gc-unknown-linux-gnu'
        run: |
          cd /tmp
          cp '${{ github.workspace }}/configs/${{ matrix.target }}.defconfig' crosstool.defconfig
          rm -rf build
          bash -x '${{ github.workspace }}/scripts/crosstool-ng-build.sh'

      - uses: ./.github/actions/crosstool-ng-rename
        if: matrix.target != 'riscv64gc-unknown-linux-gnu'
        with:
          target: ${{ matrix.target }}
          working-directory: /x-tools/${{ matrix.target }}/bin

      - name: Build toolchains for riscv64gc-unknown-linux-gnu
        if: matrix.target == 'riscv64gc-unknown-linux-gnu'
        run: |
          cd /tmp
          cp '${{ github.workspace }}/configs/${{ matrix.target }}/${{ matrix.target }}.defconfig' crosstool.defconfig
          cp -r '${{ github.workspace }}/configs/${{ matrix.target }}/patches' /tmp/patches
          rm -rf build
          bash -x '${{ github.workspace }}/scripts/crosstool-ng-build.sh'
          rm -rf /tmp/patches
          mv /x-tools/riscv64-unknown-linux-gnu /x-tools/riscv64gc-unknown-linux-gnu

      - uses: ./.github/actions/crosstool-ng-rename
        if: matrix.target == 'riscv64gc-unknown-linux-gnu'
        with:
          target: riscv64-unknown-linux-gnu
          working-directory: /x-tools/riscv64gc-unknown-linux-gnu/bin

      - name: Upload toolchains
        uses: ./.github/actions/commit-toolchain
        with:
          version: ${{ github.event.inputs.version }}
          target: ${{ matrix.target }}

  net-bsd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: adjust permissions
        uses: ./.github/actions/permission

      - name: Build toolchains
        env:
          HOST_CFLAGS: "-O -fcommon"
        run: |
          cd /tmp
          rm -rf netbsd
          bash ${{ github.workspace }}/scripts/build-netbsd-toolchain.sh

      - name: Upload toolchains
        uses: ./.github/actions/commit-toolchain
        with:
          version: ${{ github.event.inputs.version }}
          target: x86_64-unknown-netbsd
