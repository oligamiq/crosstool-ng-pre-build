name: Build toolchains

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version of the toolchain to build'
        required: true
        default: 'v0.1.0'

permissions:
  packages: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [
          "loongarch64-unknown-linux-gnu",
          "loongarch64-unknown-linux-musl",
          "powerpc-unknown-linux-gnu",
          "powerpc64-unknown-linux-gnu",
          "riscv64gc-unknown-linux-gnu",
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: adjust permissions
        uses: ./.github/actions/permission

      - name: Setup crosstool-ng
        uses: ./.github/actions/setup-crosstool-ng

      # https://github.com/rust-lang/rust/tree/46e8d20301cb4abe91ab0a4bea43bb085e1d4e4a/src/ci/docker/host-x86_64
      - name: Build toolchains
        if: matrix.target != 'riscv64gc-unknown-linux-gnu'
        run: |
          cd /tmp
          cp '${{ github.workspace }}/configs/${{ matrix.target }}.defconfig' crosstool.defconfig
          rm -rf build
          bash -x '${{ github.workspace }}/scripts/crosstool-ng-build.sh'

      - name: Build toolchains for riscv64gc-unknown-linux-gnu
        if: matrix.target == 'riscv64gc-unknown-linux-gnu'
        run: |
          cd /tmp
          cp '${{ github.workspace }}/configs/${{ matrix.target }}/${{ matrix.target }}.defconfig' crosstool.defconfig
          cp -r '${{ github.workspace }}/configs/${{ matrix.target }}/patches' /tmp/patches
          rm -rf build
          bash -x '${{ github.workspace }}/scripts/crosstool-ng-build.sh'
          rm -rf /tmp/patches
          mv /x-tools/riscv64-unknown-linux-gnu /x-tools/riscv64gc-unknown-linux-gnu
          cd /x-tools/riscv64gc-unknown-linux-gnu/bin
          rename 's/^riscv64-linux-musl/riscv64gc-linux-musl/' riscv64-linux-musl-*
          ln -sf riscv64gc-unknown-linux-gnu-cc riscv64gc-unknown-linux-gnu-gcc

      - name: additional loongarch64-unknown-linux-gnu
        if: matrix.target == 'loongarch64-unknown-linux-gnu'
        run: |
          # Prepare additional toolchain for loongarch64-unknown-none-gnu
          cp -r /x-tools/loongarch64-unknown-linux-gnu/ /x-tools/loongarch64-unknown-none/
          cat > /x-tools/loongarch64-unknown-none/bin/loongarch64-unknown-none-gcc <<'EOF'
          #!/usr/bin/env bash
          exec /x-tools/loongarch64-unknown-none/bin/loongarch64-unknown-linux-gnu-gcc -ffreestanding -mabi=lp64d "$@"
          EOF
          sudo chmod +x /x-tools/loongarch64-unknown-none/bin/loongarch64-unknown-none-gcc

          cat > /x-tools/loongarch64-unknown-none/bin/loongarch64-unknown-none-g++ <<'EOF'
          #!/usr/bin/env bash
          exec /x-tools/loongarch64-unknown-none/bin/loongarch64-unknown-linux-gnu-g++ -ffreestanding -mabi=lp64d "$@"
          EOF
          sudo chmod +x /x-tools/loongarch64-unknown-none/bin/loongarch64-unknown-none-g++

          sudo ln -s /x-tools/loongarch64-unknown-none/bin/loongarch64-unknown-linux-gnu-ar /x-tools/loongarch64-unknown-none/bin/loongarch64-unknown-none-ar

          # Prepare additional toolchain for loongarch64-unknown-none-softfloat
          cp -r /x-tools/loongarch64-unknown-linux-gnu/ /x-tools/loongarch64-unknown-none-softfloat/
          cat > /x-tools/loongarch64-unknown-none-softfloat/bin/loongarch64-unknown-none-softfloat-gcc <<'EOF'
          #!/usr/bin/env bash
          exec /x-tools/loongarch64-unknown-none-softfloat/bin/loongarch64-unknown-linux-gnu-gcc -ffreestanding -mabi=lp64s -mfpu=none "$@"
          EOF
          sudo chmod +x /x-tools/loongarch64-unknown-none-softfloat/bin/loongarch64-unknown-none-softfloat-gcc

          cat > /x-tools/loongarch64-unknown-none-softfloat/bin/loongarch64-unknown-none-softfloat-g++ <<'EOF'
          #!/usr/bin/env bash
          exec /x-tools/loongarch64-unknown-none-softfloat/bin/loongarch64-unknown-linux-gnu-g++ -ffreestanding -mabi=lp64s -mfpu=none "$@"
          EOF
          sudo chmod +x /x-tools/loongarch64-unknown-none-softfloat/bin/loongarch64-unknown-none-softfloat-g++

          sudo ln -s /x-tools/loongarch64-unknown-none-softfloat/bin/loongarch64-unknown-linux-gnu-ar /x-tools/loongarch64-unknown-none-softfloat/bin/loongarch64-unknown-none-softfloat-ar

      - name: Upload toolchains for loongarch64-unknown-none
        if: matrix.target == 'loongarch64-unknown-linux-gnu'
        uses: ./.github/actions/commit-toolchain
        with:
          version: ${{ github.event.inputs.version }}
          target: loongarch64-unknown-none

      - name: Upload toolchains for loongarch64-unknown-none-softfloat
        if: matrix.target == 'loongarch64-unknown-linux-gnu'
        uses: ./.github/actions/commit-toolchain
        with:
          version: ${{ github.event.inputs.version }}
          target: loongarch64-unknown-none-softfloat

      - name: Upload toolchains
        uses: ./.github/actions/commit-toolchain
        with:
          version: ${{ github.event.inputs.version }}
          target: ${{ matrix.target }}

  net-bsd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: adjust permissions
        uses: ./.github/actions/permission

      - name: Build toolchains
        env:
          HOST_CFLAGS: "-O -fcommon"
        run: |
          cd /tmp
          rm -rf netbsd
          bash ${{ github.workspace }}/scripts/build-netbsd-toolchain.sh

      - name: Upload toolchains
        uses: ./.github/actions/commit-toolchain
        with:
          version: ${{ github.event.inputs.version }}
          target: x86_64-unknown-netbsd
